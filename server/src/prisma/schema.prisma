// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  PENDING
  SUSPENDED
}

model User {
  id       Int        @id @default(autoincrement())
  email    String?    @unique
  password String?
  role     UserRole   @default(USER)
  status   UserStatus @default(PENDING)
  wallets  Wallet[]
  nonces   Nonce[]
}

model Wallet {
  id          String?      @unique
  address     String       @unique
  custodyType String
  accountType String
  name        String?
  userId      Int? @unique
  blockchains BlockchainAccess[]
  user        User?        @relation(fields: [userId], references: [id])
}

model BlockchainAccess {
  chainId  String
  name     String  
  wallet   Wallet @relation(fields: [walletId], references: [id])
  walletId String
}

model Nonce {
  id         Int      @id @default(autoincrement())
  userId     Int
  nonce      String   @unique
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  usedAt     DateTime? // Nullable: Null means not used, Date means it was used
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}